[{"/Users/kshama/Downloads/web10/weather_app/src/index.js":"1","/Users/kshama/Downloads/web10/weather_app/src/App.js":"2","/Users/kshama/Downloads/web10/weather_app/src/components/DailyWeather.js":"3","/Users/kshama/Downloads/web10/weather_app/src/components/Weather.js":"4"},{"size":452,"mtime":1637430335000,"results":"5","hashOfConfig":"6"},{"size":283,"mtime":1637429965000,"results":"7","hashOfConfig":"6"},{"size":3535,"mtime":1669607838000,"results":"8","hashOfConfig":"6"},{"size":5864,"mtime":1669865905000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12tgul0",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/kshama/Downloads/web10/weather_app/src/index.js",[],"/Users/kshama/Downloads/web10/weather_app/src/App.js",[],"/Users/kshama/Downloads/web10/weather_app/src/components/DailyWeather.js",["20","21"],"import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass DailyWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: JSON.parse(localStorage.getItem('dailyWeather')),\n            currentDailyWeather: JSON.parse(localStorage.getItem('currentDailyWeather')),\n            city: JSON.parse(localStorage.getItem('location'))\n        }\n    }\n\n    render() {\n        const card = [];\n        const { currentDailyWeather, city } = this.state;\n        if (this.state.data.length) {\n            const abcData = this.state.data.map((obj, i) => {\n                let newDate = new Date(obj.dt_txt);\n                const imgURL = `owf owf-${obj.weather[0].id} owf-5x`;\n                card.push(\n                    <div className=\"weather dailycard\" key={`main_${i}`}>\n                        <h3 className=\"card-title\" key={`h3_${i}`}>{moment(newDate).format('dddd')}</h3>\n                        <p className=\"text-muted\" key={`p_${i}`}>{moment(newDate).format('MMMM Do, h:mm a')}</p>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <i className={imgURL} key={`i_${i}`}></i>\n                            <h2 key={`h2_${i}`} style={{ margin: 'auto 5px' }}>{Math.round(obj.main.temp)}<sup>°C</sup></h2>\n                        </div>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                         <h2>H:</h2>   <h2 key={`h4_${i}`} style={{ margin: 'auto 5px' }}>{Math.round(obj.main.temp_max)}<sup>°C</sup></h2>\n                         <h2>L:</h2>    <h2 key={`h5_${i}`} style={{ margin: 'auto 5px', color: '#bababa' }}>{Math.round(obj.main.temp_min)}<sup>°C</sup></h2>\n                        </div>\n                        <div className=\"card-body\" key={`card_${i}`}>\n                            <p className=\"card-text\" key={`pdesc_${i}`}>{obj.weather[0].description}</p>\n                        </div>\n                    </div>\n                )\n            });\n        }\n        let newDate = new Date(currentDailyWeather.dt_txt);\n        const imgURL1 = `owf owf-${currentDailyWeather.weather[0].id} owf-5x`;\n        return (\n            <div className='rightbg widthSpacing'>\n                <h1 className='header-title'>Weather Forecast App</h1>\n                <div className='currentTemp'>\n                    <div style={{ display: 'flex' }}>\n                        <i className={imgURL1}></i>\n                        <h2 className='degreeHead'>{Math.round(currentDailyWeather.main.temp)}<sup className='supDegree'>°C</sup></h2>\n                    </div>\n                    <div className='speed'>\n                        <div className='subHead'>Humidity: {currentDailyWeather.main.humidity}%</div>\n                        <div className='subHead'>Wind: {currentDailyWeather.wind.speed} km/h</div>\n                    </div>\n                    <div className='detailsHead'>\n                        <h2 className='removeMargin'>{city.name}, {city.country}</h2>\n                        <h2 className='removeMargin'>{moment(newDate).format('dddd')}</h2>\n                        <h2 className='removeMargin'>{moment(newDate).format('MMMM Do')}</h2>\n                        <h2 className='removeMargin'>{currentDailyWeather.weather[0].description}</h2>\n                    </div>\n                </div>\n                <div className='dailyWeatherContainer'>{card}</div>\n            </div>\n        )\n    }\n}\n\nexport default DailyWeather;","/Users/kshama/Downloads/web10/weather_app/src/components/Weather.js",["22","23"],"import React, { Component } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: localStorage.getItem(\"city\") || \"\",\n      zipcode: \"02215\",\n      country: \"USA\",\n      latitude: \"\",\n      longitude: \"\",\n      weatherData: {},\n      location: {},\n    };\n  }\n  componentDidMount() {\n    this.state.city && this.getWeatherData();\n  }\n  getWeatherData = (url) => {\n    axios\n      .get(\n        url\n      )\n      .then((res) => {\n        const weatherData = res?.data?.list;\n        localStorage.setItem(\"location\", JSON.stringify(res?.data?.city));\n        localStorage.setItem(\"city\", this.state.city);\n        this.setState({ weatherData, city: this.state.city });\n      })\n      .catch((err) => {\n        alert(\"Please enter correct city\");\n        this.setState({ weatherData: {} });\n      });\n  };\n  searchCity = (event) => {\n    event.preventDefault();\n    console.log(process.env);\n    const appid = process.env.REACT_APP_APPID2;\n    const units = process.env.REACT_APP_UNITS;\n    const url = `http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city}&appid=${appid}&units=${units}`;\n    console.log(url);\n    this.getWeatherData(url);\n  };\n  handleChange = ({ target }) => {\n      this.setState({\n        city: target.value,\n      });\n  };\n\n  onClickHandler = (obj) => {\n    let newDate = new Date();\n    const weekday = obj.dt * 1000;\n    newDate.setTime(weekday);\n    const date = obj.dt_txt.split(\" \")[0];\n    const data = this.state.weatherData?.filter((data) =>\n      data.dt_txt.includes(date)\n    );\n    localStorage.setItem(\"dailyWeather\", JSON.stringify(data));\n    localStorage.setItem(\"currentDailyWeather\", JSON.stringify(obj));\n    this.props.history.push(`dailyWeather/${moment(date).format(\"dddd\")}`);\n  };\n  render() {\n    let isWeather = false;\n    const card = [];\n    if (this.state.weatherData.length) {\n      const data = [];\n      const map = new Map();\n      let cnt = 0;\n      for (const item of this.state.weatherData) {\n        if (!map.has(item.dt_txt.split(\" \")[0].split(\"-\")[2]) && cnt<=4) {\n          map.set(item.dt_txt.split(\" \")[0].split(\"-\")[2], true);\n          data.push(item);\n          cnt++;\n        }\n      }\n      console.log(data);\n      localStorage.setItem(\"fullData\", JSON.stringify(data));\n      isWeather = true;\n      const abcData = data.map((obj, i) => {\n        let newDate = new Date(obj.dt_txt);\n        const imgURL = `owf owf-${obj.weather[0].id} owf-5x`;\n        card.push(\n          <div\n            className=\"weather card\"\n            key={`main_${i}`}\n            onClick={() => {\n              this.onClickHandler(obj);\n            }}\n          >\n            <h3 className=\"card-title\" key={`h3_${i}`}>\n              {moment(newDate).format(\"dddd\")}\n            </h3>\n            <p className=\"text-muted\" key={`p_${i}`}>\n              {moment(newDate).format(\"MMMM Do\")}\n            </p>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <i className={imgURL} key={`i_${i}`}></i>\n              <h2 key={`h2_${i}`} style={{ margin: \"auto 5px\" }}>\n                {Math.round(obj.main.temp)}\n                <sup>°C</sup>\n              </h2>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <h2 key={`h4_${i}`} style={{ margin: \"auto 5px\" }}>\n                {Math.round(obj.main.temp_max)}\n                <sup>°C</sup>\n              </h2>\n              <h2\n                key={`h5_${i}`}\n                style={{ margin: \"auto 5px\", color: \"#bababa\" }}\n              >\n                {Math.round(obj.main.temp_min)}\n                <sup>°C</sup>\n              </h2>\n            </div>\n            <div className=\"card-body\" key={`card_${i}`}>\n              <p className=\"card-text\" key={`pdesc_${i}`}>\n                {obj.weather[0].description}\n              </p>\n            </div>\n          </div>\n        );\n      });\n    }\n    return (\n      <div\n        style={{ display: this.state.weatherData.length ? \"flex\" : \"flex\" }}\n      >\n        <div\n          className=\"leftbg\"\n          style={{ width: this.state.weatherData.length ? \"0%\" : \"100%\" , display: this.state.weatherData.length ? \"none\" : \"flex\"}}\n        >\n          <div className=\"SearchBarChilds\">\n            {!this.state.weatherData.length ? (\n              <h1 className=\"header-title\">Weather Forecast App</h1>\n            ) : null}\n            <h2 className=\"text-white\">Search weather on your city</h2>\n            <form onSubmit={this.searchCity}>\n              <TextField\n                variant=\"outlined\"\n                defaultValue={this.state.city}\n                value={this.state.city}\n                type=\"text\"\n                // value={this.state.value}\n                onChange={this.handleChange}\n                name=\"city\"\n                id=\"inputSearchCity\"\n                placeholder=\"Search City...\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{ background: \"white\", borderRadius: 8, width: \"82%\" }}\n              />\n              <input\n                className=\"submitButton\"\n                type=\"submit\"\n                value=\"Submit\"\n                style={{ margin: \"10px\" }}\n              />\n            </form>\n          </div>\n        </div>\n        {this.state.weatherData.length ? (\n          <div\n            className=\"rightbg\"\n            style={{ width: this.state.weatherData.length ? \"100%\" : \"0%\" }}\n          >\n            <h1 className=\"header-title\">Weather Forecast App</h1>\n            <div style={{ display: \"flex\" }}>{isWeather && card}</div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n",{"ruleId":"24","severity":1,"message":"25","line":18,"column":19,"nodeType":"26","messageId":"27","endLine":18,"endColumn":26},{"ruleId":"28","severity":1,"message":"29","line":18,"column":58,"nodeType":"30","messageId":"31","endLine":18,"endColumn":60},{"ruleId":"24","severity":1,"message":"25","line":81,"column":13,"nodeType":"26","messageId":"27","endLine":81,"endColumn":20},{"ruleId":"28","severity":1,"message":"29","line":81,"column":41,"nodeType":"30","messageId":"31","endLine":81,"endColumn":43},"no-unused-vars","'abcData' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]